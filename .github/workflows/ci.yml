name: CI

on:
  pull_request:
    branches: ['develop', 'main']
  push:
    branches: ['develop', 'main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: content checkout
        uses: actions/checkout@v2
      - name: cache node_modules
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: instal dependencies
        run: yarn install --frozen-lockfile
      - name: run tests
        run: yarn test:ci
        env:
          CI: true
      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: build project
        if: github.event_name == 'push'
        run: yarn export
      - name: upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: code-build
          path: out
      - name: log environment variables
        run: echo '${{ toJSON(github) }}'
      - name: ZIP Assets 
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./out
          zip -r coverage.zip ./coverage
      - name: create release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish project in surge
        if: github.event_name == 'push'
        run: npx surge --project ./out --domain alien-regrets.surge.sh
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
